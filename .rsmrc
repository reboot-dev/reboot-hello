########################################################################
# To expand flags or positional arguments for a specific subcommand    #
# you can include a line such as:                                      #
#                                                                      #
# subcommand --flag1 --flag2=value argument                            #
#                                                                      #
# You can also include one flag or argument per line:                  #
#                                                                      #
# subcommand --flag1                                                   #
# subcommand --flag2=value                                             #
# subcommand argument                                                  #
#                                                                      #
# To only expand flags or arguments if a specific config is used with  #
# a subcommand include lines that include 'subcommand:config', for     #
# example:                                                             #
#                                                                      #
# subcommand:use-foo --flag3=foo                                       #
#                                                                      #
# Then you can expand that config on the command line via:             #
#                                                                      #
# rsm subcommand --config=use-foo`                                     #
########################################################################

# Find '.proto' files in 'api/'.
protoc api/

# Generate code for a Python backend and React frontend.
protoc --generate=python,react

# Put boilerplate files in 'boilerplate/'.
protoc --boilerplate=boilerplate/

# Tell `rsm` where to output its generated files.
# The paths are different for backend and frontend code.
protoc -- --resemble_python_out=backend/api --resemble_react_out=web/src/api

# Watch if any generated or source files are modified.
dev run --watch=backend/api/**/*.py
dev run --watch=backend/src/**/*.py

# PYTHONPATH must be explicitly set to pick up generated code.
dev run --env=PYTHONPATH=backend/api/

# Tell `rsm` that this is a Python application.
dev run --python

# Set the application name for commands that require it.
cloud up --name=hello
cloud down --name=hello
dev expunge --name=hello
dev run --name=hello

# Run the application!
dev run backend/src/main.py
